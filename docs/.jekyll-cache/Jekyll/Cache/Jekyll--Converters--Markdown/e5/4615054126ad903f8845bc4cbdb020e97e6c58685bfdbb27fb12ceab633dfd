I"dM<h2 id="extension">Extension <a name="Extension" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L18" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p><strong>Kind</strong>: global interface</p>

<ul>
  <li><a href="#Extension">Extension</a>
    <ul>
      <li><a href="#Extension+init">.init()</a> ⇒ <code>Promise.&lt;undefined&gt;</code> | <code>undefined</code></li>
      <li><a href="#Extension+destroy">.destroy()</a> ⇒ <code>Promise.&lt;undefined&gt;</code> | <code>undefined</code></li>
      <li><a href="#Extension+activate">.activate()</a> ⇒ <code>Promise.&lt;undefined&gt;</code> | <code>undefined</code></li>
      <li><a href="#Extension+deactivate">.deactivate()</a> ⇒ <code>Promise.&lt;undefined&gt;</code> | <code>undefined</code></li>
      <li><a href="#Extension+load">.load()</a> ⇒ <code>Promise.&lt;Object.&lt;string, (Promise\|\*)&gt;&gt;</code> | <code>Object.&lt;string, (Promise\|\*)&gt;</code></li>
      <li><a href="#Extension+update">.update([prevParams])</a> ⇒ <code>Promise.&lt;Object.&lt;string, (Promise\|\*)&gt;&gt;</code> | <code>Object.&lt;string, (Promise\|\*)&gt;</code></li>
      <li><a href="#Extension+setState">.setState(statePatch)</a></li>
      <li><a href="#Extension+getState">.getState()</a> ⇒ <code>Object.&lt;string, \*&gt;</code></li>
      <li><a href="#Extension+beginStateTransaction">.beginStateTransaction()</a></li>
      <li><a href="#Extension+commitStateTransaction">.commitStateTransaction()</a></li>
      <li><a href="#Extension+cancelStateTransaction">.cancelStateTransaction()</a></li>
      <li><a href="#Extension+setPartialState">.setPartialState(partialStatePatch)</a></li>
      <li><a href="#Extension+getPartialState">.getPartialState()</a> ⇒ <code>Object.&lt;string, \*&gt;</code></li>
      <li><a href="#Extension+clearPartialState">.clearPartialState()</a></li>
      <li><a href="#Extension+setPageStateManager">.setPageStateManager(pageStateManager)</a></li>
      <li><a href="#Extension+switchToStateManager">.switchToStateManager()</a></li>
      <li><a href="#Extension+switchToPartialState">.switchToPartialState()</a></li>
      <li><a href="#Extension+setRouteParams">.setRouteParams([params])</a></li>
      <li><a href="#Extension+getRouteParams">.getRouteParams()</a> ⇒ <code>Object.&lt;string, string&gt;</code></li>
      <li><a href="#Extension+getAllowedStateKeys">.getAllowedStateKeys()</a> ⇒ <code>Array.&lt;string&gt;</code></li>
    </ul>
  </li>
</ul>

<hr />

<h3 id="extensioninit--promiseltundefinedgt--undefined">extension.init() ⇒ <code>Promise.&lt;undefined&gt;</code> | <code>undefined</code> <a name="Extension+init" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L25" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Callback for initializing the controller extension after the route
parameters have been set on this extension.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensiondestroy--promiseltundefinedgt--undefined">extension.destroy() ⇒ <code>Promise.&lt;undefined&gt;</code> | <code>undefined</code> <a name="Extension+destroy" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L42" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Finalization callback, called when the controller is being discarded by
the application. This usually happens when the user navigates to a
different URL.</p>

<p>This method is the lifecycle counterpart of the <a href="#Extension+init">init</a>
method.</p>

<p>The extension should release all resources obtained in the
<a href="#Extension+init">init</a> method. The extension must release any resources
that might not be released automatically when the extensions’s instance
is destroyed by the garbage collector.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensionactivate--promiseltundefinedgt--undefined">extension.activate() ⇒ <code>Promise.&lt;undefined&gt;</code> | <code>undefined</code> <a name="Extension+activate" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L56" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Callback for activating the extension in the UI. This is the last
method invoked during controller (and extensions) initialization, called
after all the promises returned from the <a href="#Extension+load">load</a> method have
been resolved and the controller has configured the meta manager.</p>

<p>The extension may register any React and DOM event listeners in this
method. The extension may start receiving event bus event after this
method completes.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensiondeactivate--promiseltundefinedgt--undefined">extension.deactivate() ⇒ <code>Promise.&lt;undefined&gt;</code> | <code>undefined</code> <a name="Extension+deactivate" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L71" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Callback for deactivating the extension in the UI. This is the first
method invoked during extension deinitialization. This usually happens
when the user navigates to a different URL.</p>

<p>This method is the lifecycle counterpart of the <a href="#Extension+activate">activate</a>
method.</p>

<p>The extension should deregister listeners registered and release all
resources obtained in the <a href="#Extension+activate">activate</a> method.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensionload--promiseltobjectltstring-promisegtgt--objectltstring-promisegt">extension.load() ⇒ <code>Promise.&lt;Object.&lt;string, (Promise\|\*)&gt;&gt;</code> | <code>Object.&lt;string, (Promise\|\*)&gt;</code> <a name="Extension+load" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L99" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Callback the extension uses to request the resources it needs to render
its related parts of the view. This method is invoked after the
<a href="#Extension+init">init</a> method.</p>

<p>The extension should request all resources it needs in this method, and
represent each resource request as a promise that will resolve once the
resource is ready for use (these can be data fetched over HTTP(S),
database connections, etc).</p>

<p>The method must return a plain flat object. The field names of the
object identify the resources being fetched and prepared, each value
must be either the resource (e.g. view configuration or a value
retrieved synchronously) or a Promise that will resolve to the resource.</p>

<p>The IMA will use the object to set the state of the controller.</p>

<p>Any returned promise that gets rejected will redirect the application to
the error page. The error page that will be used depends on the status
code of the error.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a><br />
<strong>Returns</strong>: <code>Promise.&lt;Object.&lt;string, (Promise\|\*)&gt;&gt;</code> | <code>Object.&lt;string, (Promise\|\*)&gt;</code> - A map object of promises resolved when all resources the controller
        requires are ready. The resolved values will be pushed to the
        controller’s state.</p>

<hr />

<h3 id="extensionupdateprevparams--promiseltobjectltstring-promisegtgt--objectltstring-promisegt">extension.update([prevParams]) ⇒ <code>Promise.&lt;Object.&lt;string, (Promise\|\*)&gt;&gt;</code> | <code>Object.&lt;string, (Promise\|\*)&gt;</code> <a name="Extension+update" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L124" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Callback for updating the extension after a route update. This method
is invoked if the current route has the <code class="highlighter-rouge">onlyUpdate</code> flag set to <code class="highlighter-rouge">true</code> and
the current controller and view match those used by the previously active
route, or, the <code class="highlighter-rouge">onlyUpdate</code> option of the current route is a callback and
returned <code class="highlighter-rouge">true</code>.</p>

<p>The method must return an object with the same semantics as the result
of the <a href="#Extension+load">load</a> method. The controller’s state will then be
patched by the returned object.</p>

<p>The other extension lifecycle callbacks (<a href="#Extension+init">init</a>,
<a href="#Extension+load">load</a>, <a href="#Extension+activate">activate</a>,
<a href="#Extension+deactivate">deactivate</a>, <a href="Extension#deinit">Extension#deinit</a>) are not call in
case this method is used.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a><br />
<strong>Returns</strong>: <code>Promise.&lt;Object.&lt;string, (Promise\|\*)&gt;&gt;</code> | <code>Object.&lt;string, (Promise\|\*)&gt;</code> - A map object of promises resolved when all resources the controller
        requires are ready. The resolved values will be pushed to the
        controller’s state.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Default</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[prevParams]</td>
      <td><code>Object.&lt;string, string&gt;</code></td>
      <td><code>{}</code></td>
      <td>Previous route         parameters.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="extensionsetstatestatepatch">extension.setState(statePatch) <a name="Extension+setState" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L140" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Patches the state of the controller using this extension by using the
provided object by copying the provided patch object fields to the
controller’s state object.</p>

<p>Note that the state is not patched recursively but by replacing the
values of the top-level fields of the state object.</p>

<p>Note that the extension may modify only the fields of the state that it
has specified by its <a href="#Extension+getAllowedStateKeys">getAllowedStateKeys</a> method.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>statePatch</td>
      <td><code>Object.&lt;string, \*&gt;</code></td>
      <td>Patch of the controller’s state to        apply.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="extensiongetstate--objectltstring-gt">extension.getState() ⇒ <code>Object.&lt;string, \*&gt;</code> <a name="Extension+getState" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L147" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Returns the current state of the controller using this extension.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a><br />
<strong>Returns</strong>: <code>Object.&lt;string, \*&gt;</code> - The current state of the controller.</p>

<hr />

<h3 id="extensionbeginstatetransaction">extension.beginStateTransaction() <a name="Extension+beginStateTransaction" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L156" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Starts queueing state patches off the controller state. While the transaction
is active every {@method setState} call has no effect on the current state.</p>

<p>Note that call to {@method getState} after the transaction has begun will
return state as it was before the transaction.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensioncommitstatetransaction">extension.commitStateTransaction() <a name="Extension+commitStateTransaction" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L162" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Applies queued state patches to the controller state. All patches are squashed
and applied with one {@method setState} call.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensioncancelstatetransaction">extension.cancelStateTransaction() <a name="Extension+cancelStateTransaction" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L167" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Cancels ongoing state transaction. Uncommited state changes are lost.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensionsetpartialstatepartialstatepatch">extension.setPartialState(partialStatePatch) <a name="Extension+setPartialState" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L177" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Patches the partial state of the extension. The extension is able
during its load and update phase receive state from active controller
using this extension and from previously loaded/updated extensions.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>partialStatePatch</td>
      <td><code>Object.&lt;string, \*&gt;</code></td>
      <td>Patch of the controller’s state to        apply.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="extensiongetpartialstate--objectltstring-gt">extension.getPartialState() ⇒ <code>Object.&lt;string, \*&gt;</code> <a name="Extension+getPartialState" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L184" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Returns the current partial state of the extension.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a><br />
<strong>Returns</strong>: <code>Object.&lt;string, \*&gt;</code> - The current partial state of the extension.</p>

<hr />

<h3 id="extensionclearpartialstate">extension.clearPartialState() <a name="Extension+clearPartialState" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L189" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Clears the current partial state of the extension and sets it value to empty object.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensionsetpagestatemanagerpagestatemanager">extension.setPageStateManager(pageStateManager) <a name="Extension+setPageStateManager" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L197" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Sets the state manager used to manage the controller’s state..</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>pageStateManager</td>
      <td><code>PageStateManager</code></td>
      <td>The current state manager to        use.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="extensionswitchtostatemanager">extension.switchToStateManager() <a name="Extension+switchToStateManager" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L202" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Enables using PageStateManager for getting state.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensionswitchtopartialstate">extension.switchToPartialState() <a name="Extension+switchToPartialState" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L207" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Disables using PageStateManager for getting state.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<hr />

<h3 id="extensionsetrouteparamsparams">extension.setRouteParams([params]) <a name="Extension+setRouteParams" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L216" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Sets the current route parameters. This method is invoked before the
<a href="#Extension+init">init</a> method.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a></p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Default</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[params]</td>
      <td><code>Object.&lt;string, string&gt;</code></td>
      <td><code>{}</code></td>
      <td>The current route        parameters.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="extensiongetrouteparams--objectltstring-stringgt">extension.getRouteParams() ⇒ <code>Object.&lt;string, string&gt;</code> <a name="Extension+getRouteParams" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L223" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Returns the current route parameters.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a><br />
<strong>Returns</strong>: <code>Object.&lt;string, string&gt;</code> - The current route parameters.</p>

<hr />

<h3 id="extensiongetallowedstatekeys--arrayltstringgt">extension.getAllowedStateKeys() ⇒ <code>Array.&lt;string&gt;</code> <a name="Extension+getAllowedStateKeys" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/extension/Extension.js#L232" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Returns the names of the state fields that may be manipulated by this
extension. Manipulations of other fields of the state will be ignored.</p>

<p><strong>Kind</strong>: instance method of <a href="#Extension"><code>Extension</code></a><br />
<strong>Returns</strong>: <code>Array.&lt;string&gt;</code> - The names of the state fields that may be manipulated
        by this extension.</p>

<hr />

:ET