I"µK<h2 id="classes">Classes</h2>

<dl>
<dt><a href="#AbstractRoute">AbstractRoute</a></dt>
<dd><p>Utility for representing and manipulating a single route in the router&#39;s
configuration.</p>
</dd>
</dl>

<h2 id="constants">Constants</h2>

<dl>
<dt><a href="#LOOSE_SLASHES_REGEXP">LOOSE_SLASHES_REGEXP</a> : <code>RegExp</code></dt>
<dd><p>Regular expression used to match and remove the starting and trailing
forward slashes from a path expression or a URL path.</p>
</dd>
</dl>

<h2 id="abstractroute">AbstractRouteÂ <a name="AbstractRoute" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L17" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Utility for representing and manipulating a single route in the routerâ€™s
configuration.</p>

<p><strong>Kind</strong>: global class</p>

<ul>
  <li><a href="#AbstractRoute">AbstractRoute</a>
    <ul>
      <li><a href="#new_AbstractRoute_new">new AbstractRoute(name, pathExpression, controller, view, options)</a></li>
      <li><em>instance</em>
        <ul>
          <li><a href="#AbstractRoute+_name">._name</a> : <code>string</code></li>
          <li><a href="#AbstractRoute+_pathExpression">._pathExpression</a> : <code>any</code></li>
          <li><a href="#AbstractRoute+_controller">._controller</a> : <code>string</code></li>
          <li><a href="#AbstractRoute+_view">._view</a> : <code>React.Component</code></li>
          <li><a href="#AbstractRoute+_options">._options</a> : <code>Object</code></li>
          <li><a href="#AbstractRoute+getName">.getName()</a> â‡’ <code>string</code></li>
          <li><a href="#AbstractRoute+getController">.getController()</a> â‡’ <code>string</code></li>
          <li><a href="#AbstractRoute+getView">.getView()</a> â‡’ <code>string</code></li>
          <li><a href="#AbstractRoute+getOptions">.getOptions()</a> â‡’ <code>Object</code></li>
          <li><a href="#AbstractRoute+getPathExpression">.getPathExpression()</a> â‡’ <code>any</code></li>
          <li><em><a href="#AbstractRoute+toPath">.toPath([params])</a> â‡’ <code>string</code></em></li>
          <li><em><a href="#AbstractRoute+matches">.matches(path)</a> â‡’ <code>boolean</code></em></li>
          <li><em><a href="#AbstractRoute+extractParameters">.extractParameters(path)</a> â‡’ <code>Object.&lt;string, ?string&gt;</code></em></li>
          <li><a href="#AbstractRoute+_getQuery">._getQuery(path)</a> â‡’ <code>Object.&lt;string, ?string&gt;</code></li>
          <li><a href="#AbstractRoute+_decodeURIParameter">._decodeURIParameter(parameterValue)</a> â‡’ <code>string</code></li>
          <li><a href="#AbstractRoute+_getTrimmedPath">._getTrimmedPath(path)</a> â‡’ <code>string</code></li>
        </ul>
      </li>
      <li><em>static</em>
        <ul>
          <li><a href="#AbstractRoute.pairsToQuery">.pairsToQuery([pairs])</a> â‡’ <code>string</code></li>
          <li><a href="#AbstractRoute.paramsToQuery">.paramsToQuery(params)</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<hr />

<h3 id="new-abstractroutename-pathexpression-controller-view-options">new AbstractRoute(name, pathExpression, controller, view, options)Â <a name="new_AbstractRoute_new"></a></h3>
<p>Initializes the route.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>name</td>
      <td><code>string</code></td>
      <td>The unique name of this route, identifying it among        the rest of the routes in the application.</td>
    </tr>
    <tr>
      <td>pathExpression</td>
      <td><code>any</code></td>
      <td>Path expression used in route matching, to generate        valid path with provided params and parsing params from current path.</td>
    </tr>
    <tr>
      <td>controller</td>
      <td><code>string</code></td>
      <td>The full name of Object Container alias        identifying the controller associated with this route.</td>
    </tr>
    <tr>
      <td>view</td>
      <td><code>string</code></td>
      <td>The full name or Object Container alias identifying        the view class associated with this route.</td>
    </tr>
    <tr>
      <td>options</td>
      <td><code>Object</code></td>
      <td>The route additional options.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="abstractroute_name--string">abstractRoute._name : <code>string</code>Â <a name="AbstractRoute+_name" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L107" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>The unique name of this route, identifying it among the rest of the
routes in the application.</p>

<p><strong>Kind</strong>: instance property of <a href="#AbstractRoute"><code>AbstractRoute</code></a></p>

<hr />

<h3 id="abstractroute_pathexpression--any">abstractRoute._pathExpression : <code>any</code>Â <a name="AbstractRoute+_pathExpression" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L115" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Path expression used in route matching, to generate valid path with
provided params and parsing params from current path.</p>

<p><strong>Kind</strong>: instance property of <a href="#AbstractRoute"><code>AbstractRoute</code></a></p>

<hr />

<h3 id="abstractroute_controller--string">abstractRoute._controller : <code>string</code>Â <a name="AbstractRoute+_controller" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L123" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>The full name of Object Container alias identifying the controller
associated with this route.</p>

<p><strong>Kind</strong>: instance property of <a href="#AbstractRoute"><code>AbstractRoute</code></a></p>

<hr />

<h3 id="abstractroute_view--reactcomponent">abstractRoute._view : <code>React.Component</code>Â <a name="AbstractRoute+_view" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L131" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>The full name or Object Container alias identifying the view class
associated with this route.</p>

<p><strong>Kind</strong>: instance property of <a href="#AbstractRoute"><code>AbstractRoute</code></a></p>

<hr />

<h3 id="abstractroute_options--object">abstractRoute._options : <code>Object</code>Â <a name="AbstractRoute+_options" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L155" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>The route additional options.</p>

<p><strong>Kind</strong>: instance property of <a href="#AbstractRoute"><code>AbstractRoute</code></a></p>

<hr />

<h3 id="abstractroutegetname--string">abstractRoute.getName() â‡’ <code>string</code>Â <a name="AbstractRoute+getName" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L179" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Returns the unique identifying name of this route.</p>

<p><strong>Kind</strong>: instance method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>string</code> - The name of the route, identifying it.</p>

<hr />

<h3 id="abstractroutegetcontroller--string">abstractRoute.getController() â‡’ <code>string</code>Â <a name="AbstractRoute+getController" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L190" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Returns the full name of the controller to use when this route is
matched by the current URL, or an Object Container-registered alias of
the controller.</p>

<p><strong>Kind</strong>: instance method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>string</code> - The name of alias of the controller.</p>

<hr />

<h3 id="abstractroutegetview--string">abstractRoute.getView() â‡’ <code>string</code>Â <a name="AbstractRoute+getView" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L201" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Returns the full name of the view class or an Object
Container-registered alias for the view class, representing the view to
use when this route is matched by the current URL.</p>

<p><strong>Kind</strong>: instance method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>string</code> - The name or alias of the view class.</p>

<hr />

<h3 id="abstractroutegetoptions--object">abstractRoute.getOptions() â‡’ <code>Object</code>Â <a name="AbstractRoute+getOptions" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L227" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Return route additional options.</p>

<p><strong>Kind</strong>: instance method of <a href="#AbstractRoute"><code>AbstractRoute</code></a></p>

<hr />

<h3 id="abstractroutegetpathexpression--any">abstractRoute.getPathExpression() â‡’ <code>any</code>Â <a name="AbstractRoute+getPathExpression" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L237" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Path expression used in route matching, to generate valid path with
provided params and parsing params from current path.</p>

<p><strong>Kind</strong>: instance method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>any</code> - The path expression.</p>

<hr />

<h3 id="abstractroutetopathparams--string"><em>abstractRoute.toPath([params]) â‡’ <code>string</code></em>Â <a name="AbstractRoute+toPath" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L255" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Creates the URL and query parts of a URL by substituting the routeâ€™s
parameter placeholders by the provided parameter value.</p>

<p>The extraneous parameters that do not match any of the routeâ€™s
placeholders will be appended as the query string.</p>

<p><strong>Kind</strong>: instance abstract method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>string</code> - Path and, if necessary, query parts of the URL
        representing this route with its parameters replaced by the
        provided parameter values.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Default</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[params]</td>
      <td><code>Object.&lt;string, (number\|string)&gt;</code></td>
      <td><code>{}</code></td>
      <td>The route        parameter values.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="abstractroutematchespath--boolean"><em>abstractRoute.matches(path) â‡’ <code>boolean</code></em>Â <a name="AbstractRoute+matches" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L270" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Tests whether the provided URL path matches this route. The provided
path may contain the query.</p>

<p><strong>Kind</strong>: instance abstract method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>boolean</code> - <code>true</code> if the provided path matches this route.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>path</td>
      <td><code>string</code></td>
      <td>The URL path.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="abstractrouteextractparameterspath--objectltstring-stringgt"><em>abstractRoute.extractParameters(path) â‡’ <code>Object.&lt;string, ?string&gt;</code></em>Â <a name="AbstractRoute+extractParameters" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L290" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Extracts the parameter values from the provided path. The method
extracts both the in-path parameters and parses the query, allowing the
query parameters to override the in-path parameters.</p>

<p>The method returns an empty hash object if the path does not match this
route.</p>

<p><strong>Kind</strong>: instance abstract method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>Object.&lt;string, ?string&gt;</code> - Map of parameter names to parameter
        values.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>path</td>
      <td><code>string</code></td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="abstractroute_getquerypath--objectltstring-stringgt">abstractRoute._getQuery(path) â‡’ <code>Object.&lt;string, ?string&gt;</code>Â <a name="AbstractRoute+_getQuery" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L305" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Extracts and decodes the query parameters from the provided URL path and
query.</p>

<p><strong>Kind</strong>: instance method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>Object.&lt;string, ?string&gt;</code> - Parsed query parameters.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>path</td>
      <td><code>string</code></td>
      <td>The URL path, including the optional query string        (if any).</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="abstractroute_decodeuriparameterparametervalue--string">abstractRoute._decodeURIParameter(parameterValue) â‡’ <code>string</code>Â <a name="AbstractRoute+_decodeURIParameter" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L347" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Decoding parameters.</p>

<p><strong>Kind</strong>: instance method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>string</code> - decodedValue</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>parameterValue</td>
      <td><code>string</code></td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="abstractroute_gettrimmedpathpath--string">abstractRoute._getTrimmedPath(path) â‡’ <code>string</code>Â <a name="AbstractRoute+_getTrimmedPath" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L365" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Trims the trailing forward slash from the provided URL path.</p>

<p><strong>Kind</strong>: instance method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>string</code> - Trimmed path.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>path</td>
      <td><code>string</code></td>
      <td>The path to trim.</td>
    </tr>
  </tbody>
</table>

<hr />

<h3 id="abstractroutepairstoquerypairs--string">AbstractRoute.pairsToQuery([pairs]) â‡’ <code>string</code>Â <a name="AbstractRoute.pairsToQuery" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L31" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Converts array of pairs (tuples) into valid URI query component.
Filters out invalid inputs (undefined, null, object, array, non-pair).</p>

<p><strong>Kind</strong>: static method of <a href="#AbstractRoute"><code>AbstractRoute</code></a><br />
<strong>Returns</strong>: <code>string</code> - Valid URI query component or empty string if
        there are no valid pairs provided.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Default</th>
      <th>Description</th>
      <th>Â </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>[pairs]</td>
      <td><code>Array.&lt;(string\|number), any&gt;</code></td>
      <td><code>[]</code></td>
      <td>Array of arrays where the first         element must be string</td>
      <td>number and the second element can be any.</td>
    </tr>
  </tbody>
</table>

<p><strong>Example</strong></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">pairs</span> <span class="o">=</span> <span class="p">[[</span><span class="dl">'</span><span class="s1">a</span><span class="dl">'</span><span class="p">,</span> <span class="kc">true</span><span class="p">],</span> <span class="p">[</span><span class="dl">'</span><span class="s1">hello world</span><span class="dl">'</span><span class="p">,</span> <span class="mi">123</span><span class="p">]];</span>
<span class="nx">pairsToQuery</span><span class="p">(</span><span class="nx">pairs</span><span class="p">);</span> <span class="c1">// =&gt; "?a=true&amp;hello%20world=123"</span>
</code></pre></div></div>

<hr />

<h3 id="abstractrouteparamstoqueryparams">AbstractRoute.paramsToQuery(params)Â <a name="AbstractRoute.paramsToQuery" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L55" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h3>
<p>Converts object of key/value pairs to URI query,
which can be appended to url.</p>

<p><strong>Kind</strong>: static method of <a href="#AbstractRoute"><code>AbstractRoute</code></a></p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>params</td>
      <td><code>Object.&lt;string, any&gt;</code></td>
      <td>Key/value pairs.</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="loose_slashes_regexp--regexp">LOOSE_SLASHES_REGEXP : <code>RegExp</code>Â <a name="LOOSE_SLASHES_REGEXP" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/router/AbstractRoute.js#L11" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Regular expression used to match and remove the starting and trailing
forward slashes from a path expression or a URL path.</p>

<p><strong>Kind</strong>: global constant</p>

<hr />

:ET