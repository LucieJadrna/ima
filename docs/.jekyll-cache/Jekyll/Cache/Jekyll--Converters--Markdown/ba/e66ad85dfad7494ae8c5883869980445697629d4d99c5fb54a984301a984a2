I"*6<h2 id="functions">Functions</h2>

<dl>
<dt><a href="#getUtils">getUtils(props, context)</a> ⇒ <code>Object.&lt;string, *&gt;</code></dt>
<dd><p>Retrieves the view utilities from the component&#39;s current context or
properties (preferring the context).</p>
</dd>
<dt><a href="#localize">localize(component, key, [params])</a> ⇒ <code>string</code></dt>
<dd><p>Returns the localized phrase identified by the specified key. The
placeholders in the localization phrase will be replaced by the provided
values.</p>
</dd>
<dt><a href="#link">link(component, name, [params])</a> ⇒ <code>string</code></dt>
<dd><p>Generates an absolute URL using the provided route name (see the
<code>app/config/routes.js</code> file). The provided parameters will
replace the placeholders in the route pattern, while the extraneous
parameters will be appended to the generated URL&#39;s query string.</p>
</dd>
<dt><a href="#cssClasses">cssClasses(component, classRules, includeComponentClassName)</a> ⇒ <code>string</code></dt>
<dd><p>Generate a string of CSS classes from the properties of the passed-in
object that resolve to <code>true</code>.</p>
</dd>
<dt><a href="#defaultCssClasses">defaultCssClasses(classRules, component)</a> ⇒ <code>string</code></dt>
<dd><p>Generate a string of CSS classes from the properties of the passed-in
object that resolve to <code>true</code>.</p>
</dd>
<dt><a href="#fire">fire(component, eventName, [data])</a></dt>
<dd><p>Creates and sends a new IMA.js DOM custom event from the provided component.</p>
</dd>
<dt><a href="#listen">listen(component, eventTarget, eventName, listener)</a></dt>
<dd><p>Registers the provided event listener for execution whenever an IMA.js
DOM custom event of the specified name occurs at the specified event
target.</p>
</dd>
<dt><a href="#unlisten">unlisten(component, eventTarget, eventName, listener)</a></dt>
<dd><p>Deregisters the provided event listener for an IMA.js DOM custom event
of the specified name at the specified event target.</p>
</dd>
</dl>

<h2 id="getutilsprops-context--objectltstring-gt">getUtils(props, context) ⇒ <code>Object.&lt;string, \*&gt;</code> <a name="getUtils" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/page/componentHelpers.js#L15" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Retrieves the view utilities from the component’s current context or
properties (preferring the context).</p>

<p><strong>Kind</strong>: global function<br />
<strong>Returns</strong>: <code>Object.&lt;string, \*&gt;</code> - The retrieved view utilities.<br />
<strong>Throws</strong>:</p>

<ul>
  <li>Error Throw if the view utils cannot be located in the provided
      properties nor context.</li>
</ul>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>props</td>
      <td><code>Object.&lt;string, \*&gt;</code></td>
      <td>The component’s current properties.</td>
    </tr>
    <tr>
      <td>context</td>
      <td><code>Object.&lt;string, \*&gt;</code></td>
      <td>The component’s current context.</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="localizecomponent-key-params--string">localize(component, key, [params]) ⇒ <code>string</code> <a name="localize" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/page/componentHelpers.js#L40" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Returns the localized phrase identified by the specified key. The
placeholders in the localization phrase will be replaced by the provided
values.</p>

<p><strong>Kind</strong>: global function<br />
<strong>Returns</strong>: <code>string</code> - Localized phrase.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>component</td>
      <td><code>AbstractComponent</code> | <code>AbstractPureComponent</code></td>
      <td>The component        requiring the localization.</td>
    </tr>
    <tr>
      <td>key</td>
      <td><code>string</code></td>
      <td>Localization key.</td>
    </tr>
    <tr>
      <td>[params]</td>
      <td><code>Object.&lt;string, (number\|string)&gt;</code></td>
      <td>Values for replacing the        placeholders in the localization phrase.</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="linkcomponent-name-params--string">link(component, name, [params]) ⇒ <code>string</code> <a name="link" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/page/componentHelpers.js#L57" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Generates an absolute URL using the provided route name (see the
<code>app/config/routes.js</code> file). The provided parameters will
replace the placeholders in the route pattern, while the extraneous
parameters will be appended to the generated URL’s query string.</p>

<p><strong>Kind</strong>: global function<br />
<strong>Returns</strong>: <code>string</code> - The generated URL.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>component</td>
      <td><code>AbstractComponent</code> | <code>AbstractPureComponent</code></td>
      <td>The component        requiring the generating of the URL.</td>
    </tr>
    <tr>
      <td>name</td>
      <td><code>string</code></td>
      <td>The route name.</td>
    </tr>
    <tr>
      <td>[params]</td>
      <td><code>Object.&lt;string, (number\|string)&gt;</code></td>
      <td>Router parameters and        extraneous parameters to add to the URL as a query string.</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="cssclassescomponent-classrules-includecomponentclassname--string">cssClasses(component, classRules, includeComponentClassName) ⇒ <code>string</code> <a name="cssClasses" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/page/componentHelpers.js#L82" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Generate a string of CSS classes from the properties of the passed-in
object that resolve to <code>true</code>.</p>

<p><strong>Kind</strong>: global function<br />
<strong>Returns</strong>: <code>string</code> - String of CSS classes that had their property resolved
        to <code>true</code>.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>component</td>
      <td><code>AbstractComponent</code> | <code>AbstractPureComponent</code></td>
      <td>The component        requiring the composition of the CSS class names.</td>
    </tr>
    <tr>
      <td>classRules</td>
      <td><code>string</code> | <code>Object.&lt;string, boolean&gt;</code></td>
      <td>CSS classes in a        string separated by whitespace, or a map of CSS class names to        boolean values. The CSS class name will be included in the result        only if the value is <code>true</code>.</td>
    </tr>
    <tr>
      <td>includeComponentClassName</td>
      <td><code>boolean</code></td>
      <td> </td>
    </tr>
  </tbody>
</table>

<p><strong>Example</strong></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">this</span><span class="p">.</span><span class="nx">cssClasses</span><span class="p">(</span><span class="dl">'</span><span class="s1">my-class my-class-modificator</span><span class="dl">'</span><span class="p">,</span> <span class="kc">true</span><span class="p">);</span>
</code></pre></div></div>
<p><strong>Example</strong></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">this</span><span class="p">.</span><span class="nx">cssClasses</span><span class="p">({</span>
           <span class="dl">'</span><span class="s1">my-class</span><span class="dl">'</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
           <span class="dl">'</span><span class="s1">my-class-modificator</span><span class="dl">'</span><span class="p">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">props</span><span class="p">.</span><span class="nx">modificator</span>
       <span class="p">},</span> <span class="kc">true</span><span class="p">);</span>
</code></pre></div></div>

<hr />

<h2 id="defaultcssclassesclassrules-component--string">defaultCssClasses(classRules, component) ⇒ <code>string</code> <a name="defaultCssClasses" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/page/componentHelpers.js#L103" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Generate a string of CSS classes from the properties of the passed-in
object that resolve to <code>true</code>.</p>

<p><strong>Kind</strong>: global function<br />
<strong>Returns</strong>: <code>string</code> - String of CSS classes that had their property resolved
        to <code>true</code>.</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>classRules</td>
      <td><code>string</code> | <code>Object.&lt;string, boolean&gt;</code></td>
      <td>CSS classes in a        string separated by whitespace, or a map of CSS class names to        boolean values. The CSS class name will be included in the result        only if the value is <code>true</code>.</td>
    </tr>
    <tr>
      <td>component</td>
      <td><code>AbstractComponent</code> | <code>AbstractPureComponent</code> | <code>string</code></td>
      <td>The component        requiring the composition of the CSS class names, if it has the        <code>className</code> property set and requires its inclusion this time.</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="firecomponent-eventname-data">fire(component, eventName, [data]) <a name="fire" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/page/componentHelpers.js#L125" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Creates and sends a new IMA.js DOM custom event from the provided component.</p>

<p><strong>Kind</strong>: global function</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>component</td>
      <td><code>AbstractComponent</code> | <code>AbstractPureComponent</code></td>
      <td>The component        at which’s root element the event will originate.</td>
    </tr>
    <tr>
      <td>eventName</td>
      <td><code>string</code></td>
      <td>The name of the event.</td>
    </tr>
    <tr>
      <td>[data]</td>
      <td><code>\*</code></td>
      <td>Data to send within the event.</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="listencomponent-eventtarget-eventname-listener">listen(component, eventTarget, eventName, listener) <a name="listen" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/page/componentHelpers.js#L145" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Registers the provided event listener for execution whenever an IMA.js
DOM custom event of the specified name occurs at the specified event
target.</p>

<p><strong>Kind</strong>: global function</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>component</td>
      <td><code>AbstractComponent</code> | <code>AbstractPureComponent</code></td>
      <td>The component        requesting the registration of the event listener.</td>
    </tr>
    <tr>
      <td>eventTarget</td>
      <td><code>React.Element</code> | <code>EventTarget</code></td>
      <td>The react component or        event target at which the listener should listen for the event.</td>
    </tr>
    <tr>
      <td>eventName</td>
      <td><code>string</code></td>
      <td>The name of the event for which to listen.</td>
    </tr>
    <tr>
      <td>listener</td>
      <td><code>function</code></td>
      <td>The listener for event to register.</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="unlistencomponent-eventtarget-eventname-listener">unlisten(component, eventTarget, eventName, listener) <a name="unlisten" href="https://github.com/seznam/ima/blob/v17.10.0/packages/core/src/page/componentHelpers.js#L165" target="_blank"><span class="icon"><i class="fas fa-external-link-alt fa-xs"></i></span></a></h2>
<p>Deregisters the provided event listener for an IMA.js DOM custom event
of the specified name at the specified event target.</p>

<p><strong>Kind</strong>: global function</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>component</td>
      <td><code>AbstractComponent</code> | <code>AbstractPureComponent</code></td>
      <td>The component        that requested the registration of the event listener.</td>
    </tr>
    <tr>
      <td>eventTarget</td>
      <td><code>React.Element</code> | <code>EventTarget</code></td>
      <td>The react component or        event target at which the listener should listen for the event.</td>
    </tr>
    <tr>
      <td>eventName</td>
      <td><code>string</code></td>
      <td>The name of the event for which to listen.</td>
    </tr>
    <tr>
      <td>listener</td>
      <td><code>function</code></td>
      <td>The listener for event to register.</td>
    </tr>
  </tbody>
</table>

<hr />

:ET